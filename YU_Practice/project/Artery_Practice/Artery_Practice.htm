<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Artery_Practice.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Artery_Practice.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Tue Jun 24 11:09:47 2025
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7e]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5e]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">ACC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[5e]">ACC_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1c]">ADC1_2_3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f435_437_int.o(.text.BusFault_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[20]">CAN1_SE_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4c]">CAN2_SE_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[f]">CRM_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[42]">DMA1_Channel1_IRQHandler</a> from at32f435_437_int.o(.text.DMA1_Channel1_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[43]">DMA1_Channel2_IRQHandler</a> from at32f435_437_int.o(.text.DMA1_Channel2_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[44]">DMA1_Channel3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[45]">DMA1_Channel4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[46]">DMA1_Channel5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4e]">DMA1_Channel6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4f]">DMA1_Channel7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[63]">DMA2_Channel1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[64]">DMA2_Channel2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[65]">DMA2_Channel3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[66]">DMA2_Channel4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[67]">DMA2_Channel5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[68]">DMA2_Channel6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[69]">DMA2_Channel7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5c]">DMAMUX_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[55]">DVP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f435_437_int.o(.text.DebugMon_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[15]">EDMA_Stream1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[16]">EDMA_Stream2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[17]">EDMA_Stream3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[18]">EDMA_Stream4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[19]">EDMA_Stream5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1a]">EDMA_Stream6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1b]">EDMA_Stream7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[39]">EDMA_Stream8_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[47]">EMAC_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[48]">EMAC_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[10]">EXINT0_IRQHandler</a> from main_gpio_int.o(.text.EXINT0_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[32]">EXINT15_10_IRQHandler</a> from main_gpio_int.o(.text.EXINT15_10_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[11]">EXINT1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[12]">EXINT2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[13]">EXINT3_IRQHandler</a> from at32f435_437_int.o(.text.EXINT3_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[14]">EXINT4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[21]">EXINT9_5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[56]">FPU_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f435_437_int.o(.text.HardFault_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[29]">I2C1_EVT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from at32f435_437_int.o(.text.I2C2_ERR_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2b]">I2C2_EVT_IRQHandler</a> from at32f435_437_int.o(.text.I2C2_EVT_IRQHandler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[52]">I2C3_ERR_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[51]">I2C3_EVT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f435_437_int.o(.text.MemManage_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f435_437_int.o(.text.NMI_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4d]">OTGFS1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[34]">OTGFS1_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[54]">OTGFS2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[53]">OTGFS2_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f435_437_int.o(.text.PendSV_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5b]">QSPI1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5a]">QSPI2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3b]">SDIO1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5d]">SDIO2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2e]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3d]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[59]">SPI4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f435_437_int.o(.text.SVC_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f435_437_int.o(.text.SysTick_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[6a]">SystemInit</a> from system_at32f435_437.o(.text.SystemInit) referenced from startup_at32f435_437.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[25]">TMR1_CH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[23]">TMR1_OVF_TMR10_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5f]">TMR20_BRK_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[62]">TMR20_CH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[60]">TMR20_OVF_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[61]">TMR20_TRG_HALL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3c]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[40]">TMR6_DAC_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[41]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[35]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[38]">TMR8_CH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[36]">TMR8_OVF_TMR13_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[37]">TMR8_TRG_HALL_TMR14_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[57]">UART7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[58]">UART8_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[50]">USART6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f435_437_int.o(.text.UsageFault_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3a]">XMC_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[6b]">__main</a> from __main.o(!!!main) referenced from startup_at32f435_437.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[6e]"></a>__scatterload_rt2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[bd]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[be]"></a>__scatterload_loop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[6f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[bf]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, __scatter.o(!!handler_null), UNUSED)

<P><STRONG><a name="[c0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[75]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[70]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[c1]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[cf]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[d2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[d3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[d4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[d5]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[d6]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[d7]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[d8]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[d9]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[da]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[db]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[dc]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[6d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[dd]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[72]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[74]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[de]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[76]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[df]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[79]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[e0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[7b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMAMUX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DVP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EDMA_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EDMA_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EDMA_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EDMA_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EDMA_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EDMA_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EDMA_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>EDMA_Stream8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>EMAC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C3_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTGFS1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTGFS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>OTGFS2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>QSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>TMR20_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TMR20_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TMR20_OVF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TMR20_TRG_HALL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TMR6_DAC_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR8_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR8_OVF_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR8_TRG_HALL_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_at32f435_437.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
</UL>

<P><STRONG><a name="[e1]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[78]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e5]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e6]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[e7]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, at32f435_437_int.o(.text.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; i2c_dma_tx_irq_handler &rArr; i2c_dma_tx_rx_irq_handler &rArr; i2c_dma_config &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, at32f435_437_int.o(.text.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = DMA1_Channel2_IRQHandler &rArr; i2c_dma_rx_irq_handler &rArr; i2c_dma_tx_rx_irq_handler &rArr; i2c_dma_config &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main_gpio_int.o(.text.EXINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXINT0_IRQHandler &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_clear
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main_gpio_int.o(.text.EXINT15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXINT15_10_IRQHandler &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_clear
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32f435_437_int.o(.text.EXINT3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EXINT3_IRQHandler &rArr; pca9555_irq_handler &rArr; exint_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pca9555_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, at32f435_437_int.o(.text.I2C2_ERR_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C2_ERR_IRQHandler &rArr; i2c_err_irq_handler &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_err_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, at32f435_437_int.o(.text.I2C2_EVT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = I2C2_EVT_IRQHandler &rArr; i2c_evt_irq_handler &rArr; i2c_master_irq_handler_dma &rArr; i2c_start_transfer &rArr; i2c_transmit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_evt_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SystemInit</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, system_at32f435_437.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>crm_ahb_div_set</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_ahb_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_ahb_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b7]"></a>crm_apb1_div_set</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_apb1_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb1_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b6]"></a>crm_apb2_div_set</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_apb2_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb2_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b8]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_auto_step_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b3]"></a>crm_clock_source_enable</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_clock_source_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_clock_source_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[88]"></a>crm_flag_get</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[87]"></a>crm_hext_stable_wait</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, at32f435_437_crm.o(.text.crm_hext_stable_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = crm_hext_stable_wait &rArr; crm_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a3]"></a>crm_periph_clock_enable</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b4]"></a>crm_pll_config</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_pll_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b2]"></a>crm_reset</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, at32f435_437_crm.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b9]"></a>crm_sysclk_switch</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_sysclk_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_sysclk_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ba]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f435_437_crm.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[89]"></a>delay_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, at_surf_f437_board_delay.o(.text.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay_init &rArr; systick_clock_source_config
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clock_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>dma_channel_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at32f435_437_dma.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_config
</UL>

<P><STRONG><a name="[91]"></a>dma_flag_clear</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, at32f435_437_dma.o(.text.dma_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
</UL>

<P><STRONG><a name="[90]"></a>dma_flag_get</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, at32f435_437_dma.o(.text.dma_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
</UL>

<P><STRONG><a name="[8e]"></a>dma_init</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, at32f435_437_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_config
</UL>

<P><STRONG><a name="[8d]"></a>dma_interrupt_enable</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, at32f435_437_dma.o(.text.dma_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_config
</UL>

<P><STRONG><a name="[a6]"></a>exint_default_para_init</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, at32f435_437_exint.o(.text.exint_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exint_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>exint_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, at32f435_437_exint.o(.text.exint_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exint_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT0_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pca9555_irq_handler
</UL>

<P><STRONG><a name="[b1]"></a>exint_flag_get</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, at32f435_437_exint.o(.text.exint_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = exint_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pca9555_irq_handler
</UL>

<P><STRONG><a name="[a7]"></a>exint_init</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, at32f435_437_exint.o(.text.exint_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exint_init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>gpio_bits_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f435_437_gpio.o(.text.gpio_bits_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>gpio_bits_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f435_437_gpio.o(.text.gpio_bits_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>gpio_init</STRONG> (Thumb, 232 bytes, Stack size 12 bytes, at32f435_437_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>gpio_input_data_bit_read</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, at32f435_437_gpio.o(.text.gpio_input_data_bit_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT0_IRQHandler
</UL>

<P><STRONG><a name="[9f]"></a>i2c_data_receive</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, at32f435_437_i2c.o(.text.i2c_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[9e]"></a>i2c_data_send</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f435_437_i2c.o(.text.i2c_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[8b]"></a>i2c_dma_config</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, i2c_application.o(.text.i2c_dma_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = i2c_dma_config &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
</UL>

<P><STRONG><a name="[92]"></a>i2c_dma_enable</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, at32f435_437_i2c.o(.text.i2c_dma_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_dma_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
</UL>

<P><STRONG><a name="[81]"></a>i2c_dma_rx_irq_handler</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_dma_rx_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = i2c_dma_rx_irq_handler &rArr; i2c_dma_tx_rx_irq_handler &rArr; i2c_dma_config &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[80]"></a>i2c_dma_tx_irq_handler</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_dma_tx_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = i2c_dma_tx_irq_handler &rArr; i2c_dma_tx_rx_irq_handler &rArr; i2c_dma_config &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>i2c_dma_tx_rx_irq_handler</STRONG> (Thumb, 986 bytes, Stack size 120 bytes, i2c_application.o(.text.i2c_dma_tx_rx_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = i2c_dma_tx_rx_irq_handler &rArr; i2c_dma_config &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_config
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_irq_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_irq_handler
</UL>

<P><STRONG><a name="[85]"></a>i2c_err_irq_handler</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_err_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_err_irq_handler &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ERR_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>i2c_evt_irq_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_evt_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = i2c_evt_irq_handler &rArr; i2c_master_irq_handler_dma &rArr; i2c_start_transfer &rArr; i2c_transmit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_EVT_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>i2c_flag_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, at32f435_437_i2c.o(.text.i2c_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_err_irq_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[94]"></a>i2c_flag_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, at32f435_437_i2c.o(.text.i2c_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_err_irq_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_refresh_txdt_register
</UL>

<P><STRONG><a name="[93]"></a>i2c_interrupt_enable</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, at32f435_437_i2c.o(.text.i2c_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_err_irq_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_rx_irq_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[98]"></a>i2c_master_irq_handler_dma</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, i2c_application.o(.text.i2c_master_irq_handler_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = i2c_master_irq_handler_dma &rArr; i2c_start_transfer &rArr; i2c_transmit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_addr_get
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_transfer
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reset_ctrl2_register
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_refresh_txdt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_evt_irq_handler
</UL>

<P><STRONG><a name="[96]"></a>i2c_master_irq_handler_int</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, i2c_application.o(.text.i2c_master_irq_handler_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = i2c_master_irq_handler_int &rArr; i2c_start_transfer &rArr; i2c_transmit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_send
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop_generate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_addr_get
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_transfer
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reset_ctrl2_register
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_refresh_txdt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_evt_irq_handler
</UL>

<P><STRONG><a name="[9a]"></a>i2c_refresh_txdt_register</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_refresh_txdt_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_refresh_txdt_register &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[9d]"></a>i2c_reset_ctrl2_register</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, i2c_application.o(.text.i2c_reset_ctrl2_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_reset_ctrl2_register
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_dma
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_irq_handler_int
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[99]"></a>i2c_slave_irq_handler_dma</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_slave_irq_handler_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = i2c_slave_irq_handler_dma &rArr; i2c_refresh_txdt_register &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reset_ctrl2_register
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_refresh_txdt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_evt_irq_handler
</UL>

<P><STRONG><a name="[97]"></a>i2c_slave_irq_handler_int</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, i2c_application.o(.text.i2c_slave_irq_handler_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = i2c_slave_irq_handler_int &rArr; i2c_refresh_txdt_register &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_interrupt_enable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reset_ctrl2_register
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_refresh_txdt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_evt_irq_handler
</UL>

<P><STRONG><a name="[9c]"></a>i2c_start_transfer</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, i2c_application.o(.text.i2c_start_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = i2c_start_transfer &rArr; i2c_transmit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[a0]"></a>i2c_stop_generate</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, at32f435_437_i2c.o(.text.i2c_stop_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_stop_generate
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[9b]"></a>i2c_transfer_addr_get</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, at32f435_437_i2c.o(.text.i2c_transfer_addr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_transfer_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_dma
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_irq_handler_int
</UL>

<P><STRONG><a name="[a1]"></a>i2c_transmit_set</STRONG> (Thumb, 88 bytes, Stack size 28 bytes, at32f435_437_i2c.o(.text.i2c_transmit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_transmit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_transfer
</UL>

<P><STRONG><a name="[77]"></a>main</STRONG> (Thumb, 528 bytes, Stack size 80 bytes, main_gpio_int.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = main &rArr; system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_default_para_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scfg_exint_line_config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a8]"></a>nvic_irq_enable</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, at32f435_437_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nvic_irq_enable &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>nvic_priority_group_config</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, at32f435_437_misc.o(.text.nvic_priority_group_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_priority_group_config &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>pca9555_irq_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at_surf_f437_board_pca9555.o(.text.pca9555_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pca9555_irq_handler &rArr; exint_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_get
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT3_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>scfg_exint_line_config</STRONG> (Thumb, 228 bytes, Stack size 12 bytes, at32f435_437_scfg.o(.text.scfg_exint_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = scfg_exint_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>system_clock_config</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, at32f435_437_clock.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>system_core_clock_update</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, system_at32f435_437.o(.text.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[8a]"></a>systick_clock_source_config</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, at32f435_437_misc.o(.text.systick_clock_source_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_clock_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[71]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[ea]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[eb]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ac]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f435_437_misc.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[ad]"></a>NVIC_EncodePriority</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, at32f435_437_misc.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[ae]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, at32f435_437_misc.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[af]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, at32f435_437_misc.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[b0]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, at32f435_437_misc.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
